syntax = "proto3";

package rgd;

//----------------------------------------------- 
//interface between Fastgen and core search module
//-----------------------------------------------

//search task
message SearchTask {
  repeated Constraint constraints = 1;
}

//the constraint will be sent to c++ JIT/search engine
//INVARIANT: (JIT engine can't handle logical and, logical or and logical not, so we handle the complexity before sending)
//comparison could be one of the 10:
//Equal, Distinct, Ugt, Uge, Ult, Ule, Sgt, Sge, Slt, Sle
message Constraint {
  uint32 comparison = 1;
  AstNode left = 2;
  AstNode right = 3;
}

message AstNode {
  // operator
  uint32 kind = 1; 
  // used by bool expr
  uint32 boolvalue = 2; 
  // width of bitvector
  uint32 bits = 3; 
  //for constant, it is value, for read, it is iv
  string value = 4;
  //for read, it is offset in the raw inputs
  //for constant, it is offset in arg
  //for extract, it is extract start offset 
  uint32 index = 5;
  //hash caculated after arggument mapping
  uint32 hash = 6;
  repeated AstNode children = 7;
  //for debug
  string name = 8;  
  uint32 label = 9;
}

//-------------------------------------------------------
//private for the Rust component, 
//for handling complexities of logical operators
//and remapping the arguments
//------------------------------------------------------

